version: 2.1

executors:
  builder:
    docker:
      - image: perdy/circleci-python-builder:latest
    environment:
      IMAGE_NAME: goobox/goobox-nodes

workflows:
  version: 2.1
  build-test-deploy:
    jobs:
      - build-development
      - build-production
      - test:
          requires:
            - build-development
      - deploy:
          context:
            aws
          filters:
            branches:  # ignore any commit on any branch by default
              only: master
          requires:
            - build-production
            - test

jobs:
  build-production:
    executor: builder
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ checksum "Dockerfile.j2" }}-{{ checksum "poetry.lock" }}-production
          paths:
            - ~/cache/docker.tar
      - run:
          name: Load cached Docker image
          command: builder load ~/cache/docker.tar
      - run:
          name: Build Docker image
          command: python make build --production
      - run:
          name: Save Docker image
          command: builder save $IMAGE_NAME ~/cache/docker.tar
      - save_cache:
          key: v1-{{ checksum "Dockerfile.j2" }}-{{ checksum "poetry.lock" }}-production
          paths:
            - ~/cache/docker.tar
      - persist_to_workspace:
          root: ~/cache/
          paths:
            - docker.tar
  build-development:
    executor: builder
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ checksum "Dockerfile.j2" }}-{{ checksum "poetry.lock" }}-development
          paths:
            - ~/cache/docker-development.tar
      - run:
          name: Load cached Docker image
          command: builder load ~/cache/docker-development.tar
      - run:
          name: Build Docker image
          command: python make build
      - run:
          name: Save Docker image
          command: builder save $IMAGE_NAME ~/cache/docker-development.tar
      - save_cache:
          key: v1-{{ checksum "Dockerfile.j2" }}-{{ checksum "poetry.lock" }}-development
          paths:
            - ~/cache/docker-development.tar
      - persist_to_workspace:
          root: ~/cache/
          paths:
            - docker-development.tar
  test:
    executor: builder
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - setup_remote_docker
      - run:
          name: Load development image
          command: builder load /tmp/workspace/docker-development.tar
      - run:
          name: Code format (black)
          command: python make black --check .
      - run:
          name: Imports sort (isort)
          command: python make isort --check-only
      - run:
          name: Code lint (flake8)
          command: python make flake8
      - run:
          name: Tests
          command: python make --ci test
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
  deploy:
    executor: builder
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - setup_remote_docker
      - run:
          name: Load Docker image
          command: builder load /tmp/workspace/docker.tar
      - run:
          name: Tag image
          command: builder tag $IMAGE_NAME $AWS_ECR_URL/$IMAGE_NAME:production $AWS_ECR_URL/$IMAGE_NAME:$CIRCLE_SHA1
      - run:
          name: Push Docker image
          command: builder push --aws-ecr -t $AWS_ECR_URL/$IMAGE_NAME:production -t $AWS_ECR_URL/$IMAGE_NAME:$CIRCLE_SHA1
