FROM {{ from_image }}
{% for label in labels -%}
  LABEL {{ label }}
{% endfor %}

ENV LC_ALL='C.UTF-8' PYTHONIOENCODING='utf-8'
ENV PROJECT_DIR=/srv/apps/{{ project }}
ENV APP_DIR=$PROJECT_DIR/{{ app }}
ENV LOG_DIR=$PROJECT_DIR/logs
ENV PYTHONPATH=$APP_DIR:$PYTHONPATH
WORKDIR $PROJECT_DIR

{% if runtime_packages %}
# Install system dependencies
RUN apt-get update && \
    apt-get install -y {{ runtime_packages|join(" ") }} && \
    rm -rf \
        /var/lib/apt/lists/* \
        /tmp/* \
        /var/tmp/*

{% endif -%}

# Install python requirements
COPY pyproject.toml poetry.lock $PROJECT_DIR/
RUN apt-get update && \
    {% if build_packages %}apt-get install -y {{ build_packages|join(" ") }} && {% endif %} \
    python -m pip install --no-cache-dir --upgrade pip poetry && \
    poetry install {% if production %}--no-dev {% endif %}&& \
    {% if build_packages %}apt-get purge -y --auto-remove {{ build_packages|join(" ") }} && {% endif %} \
    apt-get clean && \
    rm -rf \
        /var/lib/apt/lists/* \
        /tmp/* \
        /var/tmp/*

# Create initial dirs
RUN mkdir -p $APP_DIR $LOG_DIR

# Copy application
COPY alembic.ini setup.cfg $PROJECT_DIR/
COPY {{ app }} $APP_DIR/
{% if not production -%}
  COPY tests/ $PROJECT_DIR/tests/
  COPY .env $PROJECT_DIR/
{% endif -%}

ENTRYPOINT ["poetry", "run", "python", "-m", "{{ app }}"]
